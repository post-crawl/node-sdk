/**
 * Auto-generated types from PostCrawl API.
 * 
 * DO NOT EDIT THIS FILE MANUALLY!
 * Re-generate with: cd sdks/typegen && python generate.py
 */

// generated by datamodel-codegen:
//   filename:  combined.schema.json
//   timestamp: 2025-07-09T20:51:54+00:00

export interface CseImageItem {
  src: string
}

export interface Pagemap {
  cse_image?: CseImageItem[]
}

export interface Snippet {
  snippet: string
}

export interface DerivedStructData {
  formattedUrl?: string
  htmlFormattedUrl?: string
  link?: string
  pagemap?: Pagemap
  snippets?: Snippet[]
  title?: string
}

export interface Document {
  derivedStructData?: DerivedStructData
}

export interface GoogleSearchItem {
  document?: Document
}

export interface SearchService {}

export interface ExtractResultModel {
  /**
   * Result model for calculating credits after extract operation execution
   */
  include_comments?: boolean
  successfulUrls: string[]
}

export interface PlatformCounts {
  reddit: number
  tiktok: number
  unknown: number
}

export interface RedditComment {
  createdAt: string
  downvotes: number
  id: string
  parentId: string
  permalink: string
  replies?: RedditComment[]
  score: number
  text: string
  upvotes: number
}

export interface RedditCommentAPI {
  createdAt: string
  downvotes: number
  id: string
  parentId: string
  permalink: string
  replies?: RedditCommentAPI[]
  score: number
  text: string
  upvotes: number
}

export interface RedditPost {
  comments?: RedditComment[]
  createdAt: string
  description: string
  downvotes: number
  id: string
  name: string
  score: number
  subredditName: string
  title: string
  upvotes: number
  url: string
}

export interface RedditPostAPI {
  comments?: RedditCommentAPI[]
  createdAt: string
  description: string
  downvotes: number
  id: string
  name: string
  score: number
  subredditName: string
  title: string
  upvotes: number
  url: string
}

export interface SearchRequest {
  page: number
  query: string
  results: number
  social_platforms: Array<'reddit' | 'tiktok'>
}

export interface SearchResult {
  date: string
  imageUrl: string
  snippet: string
  title: string
  url: string
}

export interface TiktokComment {
  avatarUrl: string
  createdAt: string
  id: string
  likes: number
  nickname: string
  replies?: TiktokComment[]
  text: string
  username: string
}

export interface TiktokCommentAPI {
  avatarUrl: string
  createdAt: string
  id: string
  likes: number
  nickname: string
  replies?: TiktokCommentAPI[]
  text: string
  username: string
}

export interface TiktokPost {
  comments?: TiktokComment[]
  createdAt: string
  description: string
  hashtags: string[]
  id: string
  likes: string
  totalComments: number
  url: string
  username: string
}

export interface TiktokPostAPI {
  comments?: TiktokCommentAPI[]
  createdAt: string
  description: string
  hashtags: string[]
  id: string
  likes: string
  totalComments: number
  url: string
  username: string
}

export interface ExtractRequest {
  include_comments?: boolean
  response_mode?: 'raw' | 'markdown'
  urls: string[]
}

export interface SearchAndExtractRequest {
  include_comments?: boolean
  page: number
  query: string
  response_mode?: 'raw' | 'markdown'
  results: number
  social_platforms: Array<'reddit' | 'tiktok'>
}

export interface PostOutputT {
  error?: string
  markdown?: string
  raw?: RedditPost | TiktokPost
  source: 'reddit' | 'tiktok'
  url: string
}